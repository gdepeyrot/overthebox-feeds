#!/bin/sh
# shellcheck disable=SC1091
# vim: set ft=sh noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

_manage_gt_path() {
    # get ip and mp
    multipath=$(uci -q get "network.${1}.multipath" || echo "off")
	network_get_ipaddr ipaddr "${1}"

    # Verify it has a valid IP
	[ -n "$ipaddr" ] || return 

    # WAN interface can be added as a path
	case "$multipath" in
	    on|master|backup)
            if [ "${OTB_TRACKER_STATUS}" = "OK" ]; then
	            _add_gt_path "${ipaddr}"
            else
                _remove_gt_path "${ipaddr}"
            fi
	    ;;
	esac

}

_remove_gt_path() {
    # Check presence before removing
    _is_path_already_down  "${1}" && return 
    # Remove path
    _log "removing ${1} from glorytun-udp paths"
    /usr/sbin/glorytun-udp path down "${1}"
    _log "${1} path is DOWN"
}

_add_gt_path() {
    # Check presence before adding
    _is_path_already_up  "${1}" && return 
    # Add path
    _log "Adding ${1} as a path for glorytun-udp" 
    /usr/sbin/glorytun-udp path up "${1}" rate rx 300mbit tx 300mbit # temporary default value will be perf relevant SOON
    _log "${1} path is UP"
}


_is_path_already_up() {
    # Get actual OK paths
    gt_path_output=$(glorytun-udp path)
    gt_paths=$(echo "${gt_path_output}" | awk '$2 == "UP" {print $4}')

    # Check on path otherwise keep going
    [ -n "${gt_paths}" ] || return 1
    for path in ${gt_paths}; do
        if [ "${1}" = "${path}" ]; then
            return 0
        fi
    done

    return 1
}

_is_path_already_down() {
    # Get actual DOWN paths
    gt_path_output=$(glorytun-udp path)
    gt_paths=$(echo "${gt_path_output}" | awk '$2 == "DOWN" {print $4}')

    # Check on path otherwise keep going
    [ -n "${gt_paths}" ] || return 1
    for path in ${gt_paths}; do
        if [ "${1}" = "${path}" ]; then
            return 0
        fi
    done

    return 1
}


_manage_gt_path "${OTB_TRACKER_INTERFACE}"
