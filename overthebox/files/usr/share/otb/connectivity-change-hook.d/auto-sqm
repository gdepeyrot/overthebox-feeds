#!/bin/sh
# shellcheck disable=SC1091,SC2181
# vim: set ft=sh noexpandtab tabstop=4 shiftwidth=4 softtabstop=4 :

# Constants
MAX_SPEED=300
CONFIG_FILE="/etc/config/sqm"

. /lib/functions/network.sh

_log() {
	logger -p daemon.info -t "$(basename "${0}")" "$@"
}

_err() {
	logger -p daemon.err -t "$(basename "${0}")" "$@"
}

# Check if auto-sqm is activated
[ "$(uci -q get "overthebox.qos.autosqm")" = "true" ] || exit 0

# Validate WAN interface
[ "$OTB_TRACKER_STATUS" = "OK" ] || exit 0 # Interface shall be in status OK
[ "$OTB_TRACKER_INTERFACE" = "tun0" ] && exit 0 # Only physical interfaces
[ "$(uci -q get "network.${OTB_TRACKER_INTERFACE}.multipath")" = "on" ] || exit 0 # Only WAN with mptcp on

# Retrieve device
if [ "$OTB_TRACKER_INTERFACE" = "lte" ];
then
    DEVICE="wwan0" # LTE virtual device
else
    DEVICE=$(uci -q get "network.${OTB_TRACKER_INTERFACE}.device")
fi

# Retrieve local interface IP address
network_get_ipaddr SOURCE_IP "${OTB_TRACKER_INTERFACE}"

# Stop SQM before speed test
/etc/init.d/sqm stop

# Run the speedtest
_log Running Speedtest for interface "${OTB_TRACKER_INTERFACE}"
SPEEDTEST=$(librespeed-cli --json --source "${SOURCE_IP}" --local-json /tmp/speedtest.json)
if [ $? -ne 0 ]; then
    _err Speedtest failed. Aborting SQM setting for "${OTB_TRACKER_INTERFACE}"
    exit 1
fi

# Retrieve download and upload results
DOWNLOAD=$(echo "${SPEEDTEST}" | jq '.[0].download')
UPLOAD=$(echo "${SPEEDTEST}" | jq '.[0].upload')

# Do not set SQM if WAN is fiber (high speed)
DOWNLOAD=$(printf "%.0f" "$DOWNLOAD")
UPLOAD=$(printf "%.0f" "$UPLOAD")
if [ "$DOWNLOAD" -ge $MAX_SPEED ] || [ "$UPLOAD" -ge $MAX_SPEED ]; then
    _log interface speed exceeds "$MAX_SPEED"Mbps, hence no need for SQM
    exit
fi

# Calculate 90% of speed in kbps
DOWNLOAD_KBPS=$((DOWNLOAD * 900))
UPLOAD_KBPS=$((UPLOAD * 900))

# Skip when SQM is already set for this interface
# and the speed difference is less than 10%
if [ "$(uci -q get sqm."${DEVICE}".enabled)" = "1" ]; then
    # get old speed value
    OLD_DOWNLOAD_KBPS=$(uci -q get sqm."${DEVICE}".download)
    OLD_UPLOAD_KBPS=$(uci -q get sqm."${DEVICE}".upload)

    # Calculate absolute difference value
    DOWNLOAD_DIFF=$(( (DOWNLOAD_KBPS - OLD_DOWNLOAD_KBPS) * 100 / OLD_DOWNLOAD_KBPS ))
    UPLOAD_DIFF=$(( (UPLOAD_KBPS - OLD_UPLOAD_KBPS) * 100 / OLD_UPLOAD_KBPS ))
    [ "$DOWNLOAD_DIFF" -lt 0 ] && DOWNLOAD_DIFF=$(( -DOWNLOAD_DIFF ))
    [ "$UPLOAD_DIFF" -lt 0 ] && UPLOAD_DIFF=$(( -UPLOAD_DIFF ))

    # Make sure difference is greater than 10% or abort
    if [ "$DOWNLOAD_DIFF" -le 10 ] && [ "$UPLOAD_DIFF" -le 10 ]; then
        echo "Old and new speeds are within 10% difference. Exiting auto-sqm setting."
        exit
    fi
fi

# Make sure config file exists
[ -f "$CONFIG_FILE" ] || touch "$CONFIG_FILE" && _log configuration file "$CONFIG_FILE" successfully created

_log setting SQM configuration for "${OTB_TRACKER_INTERFACE}"

# Make sure queue exists
if ! uci -q get sqm."$DEVICE" > /dev/null; then
    uci add sqm queue
    uci rename sqm.@queue[-1]="$DEVICE"
    uci commit
fi

# Configure SQM
uci set sqm."${DEVICE}".enabled=1
uci set sqm."${DEVICE}".interface="$DEVICE"
uci set sqm."${DEVICE}".qdisc='cake'
uci set sqm."${DEVICE}".download="$DOWNLOAD_KBPS"
uci set sqm."${DEVICE}".upload="$UPLOAD_KBPS"
uci set sqm."${DEVICE}".script='piece_of_cake.qos'
uci commit

# Restart SQM service to apply the changes
/etc/init.d/sqm restart

_log SQM configured successfully for interface "${OTB_TRACKER_INTERFACE}"

#   Improvements list:
#   * shall we set something other than shaping when ISP is fiber ?
#   * speedtest.json config shall come from provisionning for example "${OTB_TRACKER_INTERFACE}"